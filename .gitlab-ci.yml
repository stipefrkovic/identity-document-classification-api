image: docker:latest

services:
  - docker:dind

stages:
  - build
  - test
  - setup_sonarqube
  - sonarqube-check

before_script:
  - cp .env.example .env

# build:
#   stage: build
#   script:
#     - docker-compose build

testing:
  stage: test
  script:
    - docker-compose build
    # - docker-compose run app black --check .
    # - docker-compose run app isort . --check-only --profile black
    # - docker-compose run app pytest -v 

setup_sonarqube:
  image: sonarqube:8.9.2-community
  script:
    - echo "sonar.jdbc.username=sonar" >> /opt/sonarqube/conf/sonar.properties
    - echo "sonar.jdbc.password=sonar" >> /opt/sonarqube/conf/sonar.properties
    - echo "sonar.jdbc.url=jdbc:postgresql://sonarqube-db:5432/sonar" >> /opt/sonarqube/conf/sonar.properties
    - /opt/sonarqube/bin/run.sh

sonarqube-check:
  stage: sonarqube-check
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner \
        -Dsonar.projectKey=my_project \
        -Dsonar.sources=. \
        -Dsonar.host.url=http://sonarqube:9000
  # Define dependencies on the setup_sonarqube job
  needs: [setup_sonarqube]

  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
